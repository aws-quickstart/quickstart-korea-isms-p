---
AWSTemplateFormatVersion: 2010-09-09
Description: Provides the base security, IAM, and access configuration for the AWS
  account (qs-1nb14cqc0)

Parameters:
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, periods (.), and hyphens (-). It cannot start or
      end with a hyphen (-). If you are unsure, do not change this value.
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-). If you are unsure, do not change this value.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/). If you are unsure, do not change this value.
    Default: quickstart-korea-isms-p/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/). If you are unsure, do not change this value.
    Type: String
Resources:
  SysAdminGroup:
    Type: AWS::IAM::Group
    Properties:
      Path: /
  SysAdminPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          NotAction: iam:*
          Resource: '*'
          Condition:
            Bool:
              aws:MultiFactorAuthPresent: true
        - Effect: Deny
          Action: aws-portal:*Billing
          Resource: '*'
        - Effect: Deny
          Action:
          - cloudtrail:DeleteTrail
          - cloudtrail:StopLogging
          - cloudtrail:UpdateTrail
          Resource: '*'
        - Effect: Deny
          Action:
          - kms:Create*
          - kms:Revoke*
          - kms:Enable*
          - kms:Get*
          - kms:Disable*
          - kms:Delete*
          - kms:Put*
          - kms:Update*
          Resource: '*'
      Groups:
      - !Ref SysAdminGroup
  IAMAdminGroup:
    Type: AWS::IAM::Group
    Properties:
      Path: /
  IAMAdminPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action: iam:*
          Resource: '*'
          Condition:
            Bool:
              aws:MultiFactorAuthPresent: true
        - Effect: Deny
          Action: aws-portal:*Billing
          Resource: '*'
      Groups:
      - !Ref IAMAdminGroup
  InstanceOpsGroup:
    Type: AWS::IAM::Group
    Properties:
      Path: /
  InstanceOpsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action: ec2:*
          Effect: Allow
          Resource: '*'
        - Effect: Allow
          Action: elasticloadbalancing:*
          Resource: '*'
        - Effect: Allow
          Action: cloudwatch:*
          Resource: '*'
        - Effect: Allow
          Action: autoscaling:*
          Resource: '*'
        - Effect: Deny
          Action:
          - ec2:CreateVpc*
          - ec2:DeleteVpc*
          - ec2:ModifyVpc*
          - ec2:CreateSubnet*
          - ec2:DeleteSubnet*
          - ec2:ModifySubnet*
          - ec2:Create*Route*
          - ec2:DeleteRoute*
          - ec2:AssociateRoute*
          - ec2:ReplaceRoute*
          - ec2:CreateVpn*
          - ec2:DeleteVpn*
          - ec2:AttachVpn*
          - ec2:DetachVpn*
          - ec2:CreateNetworkAcl*
          - ec2:DeleteNetworkAcl*
          - ec2:ReplaceNetworkAcl*
          - ec2:*Gateway*
          - ec2:*PeeringConnection*
          Resource: '*'
        - Effect: Deny
          Action: aws-portal:*Billing
          Resource: '*'
        - Effect: Deny
          Action:
          - kms:Create*
          - kms:Revoke*
          - kms:Enable*
          - kms:Get*
          - kms:Disable*
          - kms:Delete*
          - kms:Put*
          - kms:Update*
          Resource: '*'
      Groups:
      - !Ref InstanceOpsGroup
  ReadOnlyAdminGroup:
    Type: AWS::IAM::Group
    Properties:
      Path: /
  ReadOnlyAdminPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - appstream:Get*
          - autoscaling:Describe*
          - cloudformation:DescribeStacks
          - cloudformation:DescribeStackEvents
          - cloudformation:DescribeStackResource
          - cloudformation:DescribeStackResources
          - cloudformation:GetTemplate
          - cloudformation:List*
          - cloudfront:Get*
          - cloudfront:List*
          - cloudtrail:DescribeTrails
          - cloudtrail:GetTrailStatus
          - cloudwatch:Describe*
          - cloudwatch:Get*
          - cloudwatch:List*
          - directconnect:Describe*
          - dynamodb:GetItem
          - dynamodb:BatchGetItem
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:DescribeTable
          - dynamodb:ListTables
          - ec2:Describe*
          - elasticache:Describe*
          - elasticbeanstalk:Check*
          - elasticbeanstalk:Describe*
          - elasticbeanstalk:List*
          - elasticbeanstalk:RequestEnvironmentInfo
          - elasticbeanstalk:RetrieveEnvironmentInfo
          - elasticloadbalancing:Describe*
          - elastictranscoder:Read*
          - elastictranscoder:List*
          - iam:List*
          - iam:Get*
          - kinesis:Describe*
          - kinesis:Get*
          - kinesis:List*
          - opsworks:Describe*
          - opsworks:Get*
          - route53:Get*
          - route53:List*
          - redshift:Describe*
          - redshift:ViewQueriesInConsole
          - rds:Describe*
          - rds:ListTagsForResource
          - s3:Get*
          - s3:List*
          - sdb:GetAttributes
          - sdb:List*
          - sdb:Select*
          - ses:Get*
          - ses:List*
          - sns:Get*
          - sns:List*
          - sqs:GetQueueAttributes
          - sqs:ListQueues
          - sqs:ReceiveMessage
          - storagegateway:List*
          - storagegateway:Describe*
          - trustedadvisor:Describe*
          Effect: Allow
          Resource: '*'
        - Effect: Deny
          Action: aws-portal:*Billing
          Resource: '*'
      Groups:
      - !Ref ReadOnlyAdminGroup
  ReadOnlyBillingGroup:
    Type: AWS::IAM::Group
    Properties:
      Path: /
  ReadOnlyBillingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action: aws-portal:View*
          Resource: '*'
        - Effect: Deny
          Action: aws-portal:*Account
          Resource: '*'
      Groups:
      - !Ref ReadOnlyBillingGroup
## CloudTrail
# Enable CloudTrail
  CloudTrail:
    DependsOn:
      #        - CloudTrailS3Bucket
      - CloudTrailBucketPolicy
    #        - CloudTrailKey
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName: !Ref CloudTrailS3Bucket
      IsLogging: true
      KMSKeyId: !GetAtt CloudTrailKey.Arn

  # Enable GuardDuty
  GuardDuty:
    Type: "AWS::GuardDuty::Detector"
    Properties:
      Enable: true
      FindingPublishingFrequency: FIFTEEN_MINUTES

  # Create KMS CloudTrail encryption key
  CloudTrailKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: k-isms-key-cloudtrail
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !Ref "AWS::AccountId"
                  - ":root"
            Action: "kms:*"
            Resource: "*"
          - Sid: Allow CloudTrail to encrypt logs
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: "kms:GenerateDataKey*"
            Resource: "*"
            Condition:
              StringLike:
                "kms:EncryptionContext:aws:cloudtrail:arn": !Sub "arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*"
          - Sid: Allow CloudTrail to describe key
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: "kms:DescribeKey"
            Resource: "*"
          - Sid: Allow principals in the account to decrypt log files
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - "kms:Decrypt"
              - "kms:ReEncryptFrom"
            Resource: "*"
            Condition:
              StringEquals:
                "kms:CallerAccount": !Sub "${AWS::AccountId}"
              StringLike:
                "kms:EncryptionContext:aws:cloudtrail:arn": !Sub "arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*"
          - Sid: Allow alias creation during setup
            Effect: Allow
            Principal:
              AWS: "*"
            Action: "kms:CreateAlias"
            Resource: "*"
            Condition:
              StringEquals:
                "kms:ViaService": ec2.region.amazonaws.com
                "kms:CallerAccount": !Sub "${AWS::AccountId}"
          - Sid: Enable cross account log decryption
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - "kms:Decrypt"
              - "kms:ReEncryptFrom"
            Resource: "*"
            Condition:
              StringEquals:
                "kms:CallerAccount": !Sub "${AWS::AccountId}"
              StringLike:
                "kms:EncryptionContext:aws:cloudtrail:arn": !Sub "arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*"

  CloudTrailKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/cloudtrail
      TargetKeyId:
        Ref: CloudTrailKey

  # Create KMS CloudTrail S3 bucket encryption key
  S3CloudTrailKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: k-isms-key-cloudtrails3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !Ref "AWS::AccountId"
                  - ":root"
            Action: "kms:*"
            Resource: "*"
          - Sid: Allow VPC Flow Logs to use the key
            Effect: Allow
            Principal:
              Service:
                - delivery.logs.amazonaws.com
            Action: "kms:GenerateDataKey*"
            Resource: "*"

  S3CloudTrailKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/cloudtrails3
      TargetKeyId:
        Ref: S3CloudTrailKey

  # Create CloudTrail encrypted S3 bucket for storage
  CloudTrailS3Bucket:
    DependsOn:
      - S3CloudTrailKey
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${S3CloudTrailKeyAlias}"
              SSEAlgorithm: "aws:kms"

  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudTrailS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AWSCloudTrailAclCheck"
            Effect: Allow
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource: !Sub arn:aws:s3:::${CloudTrailS3Bucket}
          - Sid: "AWSCloudTrailWrite"
            Effect: Allow
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource: !Sub arn:aws:s3:::${CloudTrailS3Bucket}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                "s3:x-amz-acl": "bucket-owner-full-control"
  
  S3UploadBucket:
    DeletionPolicy: Retain
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub isms-conformance-delivery-${AWS::Region}-${AWS::AccountId}
      AccessControl: Private
      # Block Public Access Policy
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      # Versioning
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ConformanceServiceLinkedRole:
    Type: AWS::IAM::ServiceLinkedRole
    Properties: 
      AWSServiceName: config-conforms.amazonaws.com
      Description: my service linked role for config-conforms

  S3UploadBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3UploadBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: EnforceHTTPSConnections
            Action: s3:*
            Effect: Deny
            Principal: '*'
            Resource:
              !Sub arn:aws:s3:::isms-conformance-delivery-${AWS::Region}-${AWS::AccountId}/*
            Condition:
              Bool:
                aws:SecureTransport: false
          - Sid: AWSConfigConformsBucketPermissionsCheck
            Effect: Allow
            Principal:
              AWS:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::isms-conformance-delivery-${AWS::Region}-${AWS::AccountId}
          - Sid: AWSConfigConformsBucketDelivery
            Effect: Allow
            Principal:
              AWS:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms
            Action: s3:PutObject
            Resource: !Sub arn:aws:s3:::isms-conformance-delivery-${AWS::Region}-${AWS::AccountId}/AWSLogs/${AWS::AccountId}/Config/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSConfigConformsBucketReadAccess
            Effect: Allow
            Principal:
              AWS:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::isms-conformance-delivery-${AWS::Region}-${AWS::AccountId}/AWSLogs/${AWS::AccountId}/Config/*

  ISMSConformancePack:
    Type: AWS::Config::ConformancePack
    DependsOn: S3UploadBucketPolicy
    Properties:
      ConformancePackName: ISMS-ConformancePackName
      DeliveryS3Bucket: !Sub isms-conformance-delivery-${AWS::Region}-${AWS::AccountId}
      TemplateS3Uri: !Sub s3://${QSS3BucketName}/${QSS3KeyPrefix}templates/config-rules.template
  
   
Outputs:
  SysAdmin:
    Value: !Ref SysAdminGroup
  IAMAdminGroup:
    Value: !Ref IAMAdminGroup
  InstanceOpsGroup:
    Value: !Ref InstanceOpsGroup
  ReadOnlyBillingGroup:
    Value: !Ref ReadOnlyBillingGroup
  ReadOnlyAdminGroup:
    Value: !Ref ReadOnlyAdminGroup
  CloudTrailKMSKeyAlias:
    Description: "CloudTrail KMS Key Alias"
    Value:
      Ref: "CloudTrailKeyAlias"
  S3KMSKeyAlias:
    Description: "S3 KMS Key Alias"
    Value:
      Ref: "S3CloudTrailKeyAlias"
  CloudTrailS3Bucket:
    Description: "Encrypted S3 Bucket for CloudTrail Logs"
    Value:
      Ref: "CloudTrailS3Bucket"
  CloudTrailS3BucketPolicy:
    Description: "S3 Bucket Policy for CloudTrail Logs"
    Value:
      Ref: "CloudTrailBucketPolicy"
  CloudTrail:
    Description: "CloudTrail"
    Value:
      Ref: "CloudTrail"
...
