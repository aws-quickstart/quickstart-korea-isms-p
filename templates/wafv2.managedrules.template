---

AWSTemplateFormatVersion: '2010-09-09'
Description: AWS WAF2 Example Rule Set

## ::PARAMETERS::
## Template parameters to be configured by user
Parameters:
  ruleAction:
    Type: String
    Description: The type of action you want to iplement for the rules in this set. Valid options are COUNT or BLOCK.
    AllowedValues:
      - BLOCK
      - COUNT
    Default: COUNT 
  pELBWeb:
    Description: Web ELB ARN for WAF2
    Type: String
    Default: ''
  pCentralLogBucket:
    Type: String
    Default: ''

## ::METADATA::
## CloudFormation parameter UI definitions
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: WAF2 Implementation
        Parameters:
          - ruleAction
          - pELBWeb
      - Label:
          default: Logging configuration
        Parameters:
          - pCentralLogBucket
     
    ParameterLabels:
      ruleAction:
        default: Rule Effect
      pELBWeb:
        default: WAF2 ELB ARN
      pCentralLogBucket:
        default: Central Logging Bucket

## ::CONDITIONS::
## Determines if we're streaming to S3
Conditions:
  CentralLoggingCondition: !Not [!Equals [!Ref pCentralLogBucket, '']]
  ActionCondition: !Equals [!Ref ruleAction, 'BLOCK']

## ::RESOURCES::
## Resources used in this solution
Resources:

  CloudWatchLogGroupS3:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 365

  CloudWatchLogStreamS3:
    DependsOn: CloudWatchLogGroupS3
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref CloudWatchLogGroupS3
      LogStreamName: !Sub AWS_WAF_S3_${AWS::Region}

  StreamS3only:
    Type: AWS::KinesisFirehose::DeliveryStream
    Condition: CentralLoggingCondition
    Properties:
      DeliveryStreamName: aws-waf-logs-analytics
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !Sub arn:aws:s3:::${pCentralLogBucket}
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 120
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref CloudWatchLogGroupS3
          LogStreamName: !Ref CloudWatchLogStreamS3
        CompressionFormat: UNCOMPRESSED
        ErrorOutputPrefix: WAF_error
        Prefix: !Sub AWS_WAF_S3_${AWS::Region}
        RoleARN: !GetAtt rFirehoseRoleS3.Arn

  rFirehoseRoleS3:
    Type: AWS::IAM::Role
    Condition: CentralLoggingCondition
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service: 'firehose.amazonaws.com'
          Action: 'sts:AssumeRole'
          Condition:
            StringEquals:
              sts:ExternalId: !Sub ${AWS::AccountId}
      Path: /
      Policies:
        - PolicyName: Firehose_Role_S3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: glue:GetTableVersions
                Resource: "*"
            #Statement:
              - Effect: Allow
                Action:
                - s3:AbortMultipartUpload
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
                - s3:PutObject
                Resource:
                - !Sub arn:aws:s3:::${pCentralLogBucket}
                - !Sub arn:aws:s3:::${pCentralLogBucket}/*
            #Statement:
              - Effect: Allow
                Action:
                - lambda:InvokeFunction
                - lambda:GetFunctionConfiguration
                Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%
            #Statement:
              - Effect: Allow
                Action: logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/aws-waf-logs-${AWS::Region}-analytics:log-stream:*

  ###
  ## ADD WAFv2
  rELBWebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: ELBWebACL
      Scope: REGIONAL
      Description: This is a Sample WebACL
      DefaultAction:
        Block: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: KISMSWebACLMetric
      
      Rules:

        - Name: AWS-AWSManagedRulesAmazonIpReputationList
          Priority: 0
          OverrideAction:
            !If 
              - ActionCondition
              - None: {}
              - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: MetricForAMRAIRL
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAmazonIpReputationList
              ExcludedRules: [] 

        - Name: AWS-AWSManagedRulesAdminProtectionRuleSet
          Priority: 1
          OverrideAction:
            !If 
              - ActionCondition
              - None: {}
              - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: MetricForAMRAPRS
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAdminProtectionRuleSet
              ExcludedRules: [] 

        - Name: AWS-AWSManagedRulesCommonRuleSet
          Priority: 2
          OverrideAction:
            !If 
              - ActionCondition
              - None: {}
              - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: MetricForAMRCRS
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
              ExcludedRules: [] 


        - Name: AWS-AWSManagedRulesKnownBadInputsRuleSet
          Priority: 3
          OverrideAction:
            !If 
              - ActionCondition
              - None: {}
              - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: MetricForAMRKBIRS
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
              ExcludedRules: []

        - Name: AWS-AWSManagedRulesSQLiRuleSet
          Priority: 4
          OverrideAction:
            !If 
              - ActionCondition
              - None: {}
              - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: MetricForAMRSRS
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesSQLiRuleSet
              ExcludedRules: [] 

  rELBCLAssociation:
    Type: 'AWS::WAFv2::WebACLAssociation'
    Properties:
      WebACLArn: !GetAtt 
        - rELBWebACL
        - Arn
      ResourceArn: !Ref pELBWeb

## ::OUTPUTS::
## Outputs useful in other templates
